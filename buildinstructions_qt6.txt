https://wiki.qt.io/Building_Qt_6_from_Git

REQUIRED:
-Python (latest; winget install Python.Python.3.xx)
-Perl for Windows (latest; winget install StrawberryPerl.StrawberryPerl)
-Git for Windows (latest; winget install Git.Git)
-MSVC2022
-Windows 10/11 SDK (latest)
-CMake (winget install Kitware.CMake)
-Ninja (winget install Ninja-build.Ninja)
-jom (Qt5 only)

With everything in the path, open MSVC2022 prompt (x64 Native Tools Command Prompt for VS 2022):
$mkdir C:\qt5
$cd C:\qt5
$mkdir qt6-build
$git clone https://code.qt.io/qt/qt5.git
$cd qt5

For Qt6:
$git checkout <branch> (ex. 6.2.0, whatever)

For Qt5:
$git checkout <tag> (ex. v5.15.11-lts-lgpl)

If you want to build all of Qt:
$perl init-repository

And if you want just tools (i.e. Linguist), init only tools and dependencies (for Qt6):
$perl init-repository --module-subset=qtbase,qttools,qtdeclarative,qtactiveqt,qtimageformats,qtshadertools,qtsvg

In any case, build it:
$cd ..\qt6-build

For Qt6:
$..\qt5\configure.bat -release -opensource -platform win32-msvc -static -static-runtime -nomake examples -nomake tests -nomake manual-tests -nomake minimal-static-tests -nomake benchmarks -prefix C:\qt6-static\
$cmake --build . --parallel

If you wish to install:
$cmake --install .

And now you'll have Qt6 static for MSVC2022!

For Qt5:
$..\qt5\configure.bat -release -opensource -platform win32-msvc -static -static-runtime -nomake examples -nomake tests -prefix C:\qt5-static\
$jom

If you wish to install:
$jom install

And now you'll have Qt5 static for MSVC2022!
